name_to_last_name(winner_name) %>%
name_to_last_name(loser_name)
full_set
ace_set <- atp_matches %>%
find_player("Roger Federer", "Rafael Nadal", "Novak Djokovic", "Ivo Karlovic", "John Isner") %>%
name_to_last_name(winner_name) %>%
name_to_last_name(loser_name)
ace_set
ace_set %>% player_ace("Nadal")
rr %>% player_ace("Nadal")
rr
rr
rr %>% head %>% as.data.frame()
rr %>% player_ace("Nadal")
bind_rows(player_ace(rr, "Nadal"), player_ace(rr, "Federer")) %>%
ggplot(aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE)
player_ace <- function(df, name) {
df %>%
mutate(ace    = case_when(winner_name == name ~ w_ace,
loser_name  == name ~ l_ace,
TRUE ~ NA),
player = name) %>%
select(player, ace) %>%
filter(!is.na(ace))
}
rr %>% player_ace("Nadal")
player_ace <- function(df, name) {
df %>%
mutate(ace    = case_when(winner_name == name ~ w_ace,
loser_name  == name ~ l_ace,
TRUE ~ NA_character_),
player = name) %>%
select(player, ace) %>%
filter(!is.na(ace))
}
rr %>% player_ace("Nadal")
?map_df
df = ace_set
df
all_players <- unique(c(df$winner_name, df$loser_name))
all_players
ace_set
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set)
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map(player_ace, df = ace_set)
aces_player <- c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map(player_ace, df = ace_set)
aces_player[[2]]
aces_player[[1]]
aces_player[[5]]
aces_player[[5]] %>% tail()
aces_player <- c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set)
aces_player
aces_player %>% tail
some_func <- function(df, col) {
col_q    <- enq(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
df %>%
mutate(col_name = log(!!col_q))
}
add_log <- function(df, col) {
col_q    <- enq(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
df %>%
mutate(col_name = log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
df %>%
mutate(col_name = log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
df %>%
mutate(col_name := log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
df %>%
mutate(!!col_name := log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
retrun(col_name)
df %>%
mutate(!!col_name := log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(col_q, "_log") %>% rlang::quo_text()
return(col_name)
df %>%
mutate(!!col_name := log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(rlang::quo_text(col_q), "_log")
return(col_name)
df %>%
mutate(!!col_name := log(!!col_q))
}
add_log(mtcars, drat)
add_log <- function(df, col) {
col_q    <- enquo(col)
col_name <- paste0(rlang::quo_text(col_q), "_log")
df %>%
mutate(!!col_name := log(!!col_q))
}
add_log(mtcars, drat)
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set)
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
ggplot(aes(player, ace)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE)
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
ggplot(aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE)
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set)
player_ace()
player_ace
ace_set
c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
mutate(ace = as.integer(ace)) %>%
ggplot(aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE)
aces_set <- c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
mutate(ace = as.integer(ace))
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(0, 35))
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(0, 45))
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(0, 45))
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(0, 45))
ggplot(aces_set, aes(aces)) +
geom_histogram()
ggplot(aces_set, aes(ace)) +
geom_histogram()
ggplot(aces_set, aes(ace)) +
geom_histogram() +
xlim(c(0, 45))
ggplot(aces_set, aes(ace)) +
geom_histogram(binwidth = 1) +
xlim(c(0, 45)) +
marginals_player <- ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(0, 45))
ggplot(aces_set, aes(ace)) +
geom_histogram(binwidth = 1) +
xlim(c(0, 45))
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1) +
xlim(c(0, 45))
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1) +
xlim(c(0, 45)) +
ggtitle("Aces per game, for five players")
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1) +
xlim(c(0, 45)) +
ggtitle("Aces per match, for five players")
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(0, 45)) +
ggtitle("Aces per match, for five players")
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(-1, 45)) +
ggtitle("Aces per match, for five players")
marginals_player <- ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(-1, 45))
ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(-1, 45)) +
ggtitle("Aces per match, for five players")
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(-1, 45))
aces_set
aces_set %>% count(player, ace)
aces_set %>% count(player)
ggplot(aces_set, aes(player)) +
geom_bar()
ggplot(aces_set, aes(player)) +
geom_bar()
joint_aces <- ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(-1, 45)) +
ggtitle("Aces per match, for five players")
joint_aces +
geom_vline(xintercept = 20, col "red")
joint_aces +
geom_vline(xintercept = 20, col = "red")
aces_player
aces_player %>%
filter(aces > 20) %>%
count(player)
aces_player %>%
filter(ace > 20) %>%
count(player)
aces_player
player_ace <- function(df, name) {
df %>%
mutate(ace    = case_when(winner_name == name ~ w_ace %>% as.integer(),
loser_name  == name ~ l_ace %>% as.integer(),
TRUE ~ NA),
player = name) %>%
select(player, ace) %>%
filter(!is.na(ace))
}
aces_set <- c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
mutate(ace = as.integer(ace))
player_ace <- function(df, name) {
df %>%
mutate(ace    = case_when(winner_name == name ~ w_ace %>% as.integer(),
loser_name  == name ~ l_ace %>% as.integer(),
TRUE ~ NA_integer_),
player = name) %>%
select(player, ace) %>%
filter(!is.na(ace))
}
aces_set <- c("Nadal", "Federer", "Djokovic", "Isner", "Karlovic") %>%
map_df(player_ace, df = ace_set) %>%
mutate(ace = as.integer(ace))
joint_aces <- ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(-1, 45)) +
ggtitle("Aces per match, for five players")
joint_aces
ggplot(aces_set, aes(player)) +
geom_bar()
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(-1, 45))
aces_player %>%
filter(ace > 20) %>%
count(player)
aces_player
aces_set %>%
filter(ace > 20) %>%
count(player)
aces_set %>%
filter(ace > 15) %>%
count(player)
aces_set %>%
filter(ace > 15) %>%
count(player) %>%
mutate(prop = n / sum(n))
ggplot(aces_set, aes(player)) +
geom_bar(aes(fill = player))
ggplot(aces_set, aes(player)) +
geom_bar(aes(fill = player)) +
guides(fill = FALSE)
aces_set %>%
filter(ace > 15) %>%
count(player) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(player, prop)) +
geom_bar(aes(fill = player), stat = "identity") +
guides(fill = FALSE)
atp_matches
atp_matches
atp_matches %>%
filter(stringr::str_match(tourney_date, "2017{dddd}"))
stringr::str_match(tourney_date[1:10], "2017{dddd}")
stringr::str_match(atp_matches$tourney_date[1:10], "2017{dddd}")
stringr::str_match(atp_matches$tourney_date[1:10], "2017{dddd}")
between
atp_matches %>%
filter(tourney_date %>% between(20160000, 20170000))
atp_2016 <- atp_matches %>%
filter(tourney_date %>% between(20160000, 20170000))
atp_matches
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace)
aces_heigth <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
)
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
)
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height))
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(aces))
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(ace))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric), na.rm = TRUE)
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric, na.rm = TRUE))
aces_height
ggplot(aces_height, aes(height, med_aces)) +
geom_point()
ggplot(aces_height, aes(height, med_aces)) +
geom_point() +
expand_limits(y = 0)
ggplot(aces_height, aes(height, med_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = mean(ace %>% as.numeric, na.rm = TRUE))
ggplot(aces_height, aes(height, med_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
cont_plot <- ggplot(aces_height, aes(height, mean_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
mean_aces = mean(ace %>% as.numeric, na.rm = TRUE))
cont_plot <- ggplot(aces_height, aes(height, mean_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
ggplot_build(cont_plot)
ggplot_build(cont_plot)
cont_plot$coordinates$limits
cont_plot$coordinates
ggplot_build(cont_plot)
ggplot_build(cont_plot)$panel
ggplot_build(cont_plot)$panel$ranges
cont_plot
ggplot_build(cont_plot)
ggplot_build(cont_plot)$layout
ggplot_build(cont_plot)$layout$panel_ranges
ggplot_build(cont_plot)$layout$panel_ranges
ggplot_build(cont_plot)$layout$panel_ranges[[1]]
ggplot_build(cont_plot)$layout$panel_ranges[[1]]$x.range
xr <- ggplot_build(cont_plot)$layout$panel_ranges[[1]]$x.range[2]
yr <- ggplot_build(cont_plot)$layout$panel_ranges[[1]]$y.range[2]
yr
xr
rect_data <- data.frame(x1 = 190, x2 = xr, y1 = 10, y2 = yr)
cont_plot +
geom_rect(data = rect_data)
cont_plot +
geom_rect(data = rect_data, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2)
cont_plot +
cont_plot +
geom_rect(data = rect_data,aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2))
?geom_rect
rect_data
cont_plot +
geom_rect(data = rect_data, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2))
cont_plot
cont_plot +
geom_rect(data = rect_data, xmin=x1, xmax=x2, ymin=y1, ymax=y2)
rect_data
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblur", alpha = .4)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue", alpha = .4)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue", alpha = .1)
cont_plot +
geom_rect( alpha = .1, xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue")
cont_plot +
annotate("rect", xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue")
cont_plot +
annotate("rect", xmin=190, xmax=xr, ymin=10, ymax=yr,
fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190, xmax = xr, ymin = 10, ymax = yr,
fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190, xmax = xr, ymin = 10,
ymax = yr, fill = "cornflowerblue", alpha = .7) +
annotate("rect", xmin = 190, xmax = xr, ymin = 0,
ymax = yr, fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190.5, xmax = xr, ymin = 10,
ymax = yr, fill = "cornflowerblue", alpha = .7) +
annotate("rect", xmin = 190.5, xmax = xr, ymin = 0,
ymax = yr, fill = "cornflowerblue", alpha = .5)
rr
rr
ggmm(rr, surface, winner_name)
ggmm(rr, surface, winner_name, winner_name == "Nadal" & surface == "Clay")
ggmm(rr, surface, winner_name, winner_name == "Federer" & surface == "Clay")
rr %>% count(winner_name)
rr %>% count(winner_name) %>% mutate(n / 45)
12 / .45
23 / .45
1 / .45
12 / 45 * 100
12 / 35 * 100
23 / 35 * 100
rr %>% filter(winner_name == "Federer")
rr %>% filter(winner_name == "Federer") %>% count(surface)
2 / .12
1/12
rr %>% count(surface)
15 / .35
ggmm(rr, surface, winner_name, surface == "Clay")
ggmm(rr, surface, winner_name, surface == "Federer")
ggmm(rr, surface, winner_name, winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay" & winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay")
ggmm(rr, surface, winner_name, surface == "Clay" & winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay")
4900 / 36 * 40
