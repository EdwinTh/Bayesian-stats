joint_aces <- ggplot(aces_set, aes(ace)) +
geom_histogram(aes(fill = player), binwidth = 1, col = "black") +
xlim(c(-1, 45)) +
ggtitle("Aces per match, for five players")
joint_aces
ggplot(aces_set, aes(player)) +
geom_bar()
ggplot(aces_set, aes(ace, player)) +
ggridges::geom_density_ridges(aes(fill = player)) +
guides(fill = FALSE) +
xlim(c(-1, 45))
aces_player %>%
filter(ace > 20) %>%
count(player)
aces_player
aces_set %>%
filter(ace > 20) %>%
count(player)
aces_set %>%
filter(ace > 15) %>%
count(player)
aces_set %>%
filter(ace > 15) %>%
count(player) %>%
mutate(prop = n / sum(n))
ggplot(aces_set, aes(player)) +
geom_bar(aes(fill = player))
ggplot(aces_set, aes(player)) +
geom_bar(aes(fill = player)) +
guides(fill = FALSE)
aces_set %>%
filter(ace > 15) %>%
count(player) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(player, prop)) +
geom_bar(aes(fill = player), stat = "identity") +
guides(fill = FALSE)
atp_matches
atp_matches
atp_matches %>%
filter(stringr::str_match(tourney_date, "2017{dddd}"))
stringr::str_match(tourney_date[1:10], "2017{dddd}")
stringr::str_match(atp_matches$tourney_date[1:10], "2017{dddd}")
stringr::str_match(atp_matches$tourney_date[1:10], "2017{dddd}")
between
atp_matches %>%
filter(tourney_date %>% between(20160000, 20170000))
atp_2016 <- atp_matches %>%
filter(tourney_date %>% between(20160000, 20170000))
atp_matches
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace)
aces_heigth <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
)
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
)
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height))
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(aces))
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(ace))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric))
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric), na.rm = TRUE)
aces_height
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = median(ace %>% as.numeric, na.rm = TRUE))
aces_height
ggplot(aces_height, aes(height, med_aces)) +
geom_point()
ggplot(aces_height, aes(height, med_aces)) +
geom_point() +
expand_limits(y = 0)
ggplot(aces_height, aes(height, med_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
med_aces = mean(ace %>% as.numeric, na.rm = TRUE))
ggplot(aces_height, aes(height, med_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
cont_plot <- ggplot(aces_height, aes(height, mean_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
aces_height <- bind_rows(
atp_2016 %>% select(name = winner_name, height = winner_ht, ace = w_ace),
atp_2016 %>% select(name = loser_name, height = loser_ht, ace = l_ace)
) %>%
filter(!is.na(height)) %>%
group_by(name) %>%
filter(n() > 9) %>%
summarise(height   = max(height),
mean_aces = mean(ace %>% as.numeric, na.rm = TRUE))
cont_plot <- ggplot(aces_height, aes(height, mean_aces)) +
geom_point(alpha = .5) +
expand_limits(y = 0)
cont_plot
ggplot_build(cont_plot)
ggplot_build(cont_plot)
cont_plot$coordinates$limits
cont_plot$coordinates
ggplot_build(cont_plot)
ggplot_build(cont_plot)$panel
ggplot_build(cont_plot)$panel$ranges
cont_plot
ggplot_build(cont_plot)
ggplot_build(cont_plot)$layout
ggplot_build(cont_plot)$layout$panel_ranges
ggplot_build(cont_plot)$layout$panel_ranges
ggplot_build(cont_plot)$layout$panel_ranges[[1]]
ggplot_build(cont_plot)$layout$panel_ranges[[1]]$x.range
xr <- ggplot_build(cont_plot)$layout$panel_ranges[[1]]$x.range[2]
yr <- ggplot_build(cont_plot)$layout$panel_ranges[[1]]$y.range[2]
yr
xr
rect_data <- data.frame(x1 = 190, x2 = xr, y1 = 10, y2 = yr)
cont_plot +
geom_rect(data = rect_data)
cont_plot +
geom_rect(data = rect_data, mapping=aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2)
cont_plot +
cont_plot +
geom_rect(data = rect_data,aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2))
?geom_rect
rect_data
cont_plot +
geom_rect(data = rect_data, aes(xmin=x1, xmax=x2, ymin=y1, ymax=y2))
cont_plot
cont_plot +
geom_rect(data = rect_data, xmin=x1, xmax=x2, ymin=y1, ymax=y2)
rect_data
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblur", alpha = .4)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue", alpha = .4)
cont_plot +
geom_rect(xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue", alpha = .1)
cont_plot +
geom_rect( alpha = .1, xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue")
cont_plot +
annotate("rect", xmin=190, xmax=xr, ymin=10, ymax=yr, fill = "cornflowerblue")
cont_plot +
annotate("rect", xmin=190, xmax=xr, ymin=10, ymax=yr,
fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190, xmax = xr, ymin = 10, ymax = yr,
fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190, xmax = xr, ymin = 10,
ymax = yr, fill = "cornflowerblue", alpha = .7) +
annotate("rect", xmin = 190, xmax = xr, ymin = 0,
ymax = yr, fill = "cornflowerblue", alpha = .5)
cont_plot +
annotate("rect", xmin = 190.5, xmax = xr, ymin = 10,
ymax = yr, fill = "cornflowerblue", alpha = .7) +
annotate("rect", xmin = 190.5, xmax = xr, ymin = 0,
ymax = yr, fill = "cornflowerblue", alpha = .5)
rr
rr
ggmm(rr, surface, winner_name)
ggmm(rr, surface, winner_name, winner_name == "Nadal" & surface == "Clay")
ggmm(rr, surface, winner_name, winner_name == "Federer" & surface == "Clay")
rr %>% count(winner_name)
rr %>% count(winner_name) %>% mutate(n / 45)
12 / .45
23 / .45
1 / .45
12 / 45 * 100
12 / 35 * 100
23 / 35 * 100
rr %>% filter(winner_name == "Federer")
rr %>% filter(winner_name == "Federer") %>% count(surface)
2 / .12
1/12
rr %>% count(surface)
15 / .35
ggmm(rr, surface, winner_name, surface == "Clay")
ggmm(rr, surface, winner_name, surface == "Federer")
ggmm(rr, surface, winner_name, winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay" & winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay")
ggmm(rr, surface, winner_name, surface == "Clay" & winner_name == "Federer")
ggmm(rr, surface, winner_name, surface == "Clay")
4900 / 36 * 40
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:500, theta = 0)
library(tidyverse)
theta_frame <- data_frame(iteration = 1:500, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
posterior_prop <- function(theta) {
dbeta(theta, 3, 3) * dbinom(31, 44, theta)
}
integrate(posterior_prop, 0, 1)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(theta, iteration)) +
geom_point() +
geom_step()
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step()
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
set.seed(4242)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:500, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
theta_frame
theta_frame %>% tail(450)
ggplot(theta_frame %>% tail(450)), aes(theta)) +
ggplot(theta_frame %>% tail(450), aes(theta)) +
geom_histogram()
theta_frame <- data_frame(iteration = 1:1000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
theta_frame
set.seed(4242)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:1000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame %>% tail(450), aes(theta)) +
geom_histogram()
ggplot(theta_frame %>% tail(450), aes(theta)) +
geom_histogram() +
analytical <- data_frame(theta = seq(0, 1, by = .01)) %>%
mutate(posterior = dbeta(theta, 34, 16))
ggplot(analytical, aes(theta, posterior)) + geom_line()
analytical
ggplot(theta_frame %>% tail(450), aes(theta)) +
geom_histogram() +
geom_line(data = analytical, aes(y = posterior))
?geom_histogram
ggplot(theta_frame %>% tail(450), aes(theta), ..density..) +
geom_histogram() +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta), ..density..) +
geom_histogram()
ggplot(diamonds, aes(price, ..density.., colour = cut)) +
geom_freqpoly(binwidth = 500)
ggplot(theta_frame %>% tail(450), aes(theta), ..jos..) +
geom_histogram() +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta), ..density..) +
geom_histogram() +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram() +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .01) +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical, aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02)
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.9)),
aes(y = posterior))
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
set.seed(42)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
set.seed(42)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
set.seed(11)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
set.seed(4242)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
set.seed(424)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .01) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
set.seed(42442)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .01) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
ggplot(theta_frame %>% tail(450), aes(theta, ..density..)) +
geom_histogram(binwidth = .05) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
set.seed(4242)
current_theta <- 0.1
theta_frame <- data_frame(iteration = 1:2000, theta = 0)
for(i in 1:nrow(theta_frame)) {
theta_frame$theta[i] <- current_theta
proposed <- rnorm(1, current_theta, 0.05)
accept <- (posterior_prop(proposed) / posterior_prop(current_theta)) >
runif(1)
if (accept) current_theta <- proposed
}
ggplot(theta_frame, aes(iteration, theta)) +
geom_point() +
geom_step() +
coord_flip()
ggplot(theta_frame[-c(1:50), ], aes(theta, ..density..)) +
geom_histogram(binwidth = .05) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
ggplot(theta_frame[-c(1:50), ], aes(theta, ..density..)) +
geom_histogram(binwidth = .02) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
ggplot(theta_frame[-c(1:50), ], aes(theta, ..density..)) +
geom_histogram(binwidth = .01) +
geom_line(data = analytical %>% filter(between(theta, 0.5, 0.85)),
aes(y = posterior), col = "red")
cranlogs::cran_downloads("padr", "last-weel")
cranlogs::cran_downloads("padr", "last-week")
